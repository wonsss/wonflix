{"version":3,"sources":["Components/Header.js","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","assets/noPosterSmall.png","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","div","Title","span","Grid","Section","title","children","Loader","role","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","noPoster","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","original_name","backdrop_path","first_air_date","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","console","log","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","onChange","placeholder","defaultValue","show","SearchContainer","event","preventDefault","searchByTerm","value","target","TVPresenter","topRated","airingToday","TVContainer","path","exact","component","Home","Search","TV","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9dd11ee.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 10px 20px;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n  z-index: 10;\n`;\nconst List = styled.ul`\n  display: flex;\n  &:hover {\n  }\n`;\n\nconst Item = styled.li`\n  width: 60px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#c0392b\" : \"transparent\")};\n  transition: border-bottom 0.4s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">Tv</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"338180ef1dc53f478b264a5a3f718b8a\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child){margin-bottom: 50px};\n`\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\nconst Loader = () => (\n    <Container>\n        <span role=\"img\" aria-label=\"loading\">⏳</span>\n    </Container>\n);\n\nexport default Loader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  margin-top: 100px;\n  color: ${(props) => props.color};\n  font-weight: 600;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","export default __webpack_public_path__ + \"static/media/noPosterSmall.9e83d4e6.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport noPoster from \"../assets/noPosterSmall.png\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : noPoster\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Wonflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Wonflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing Movies\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import { moviesApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"can't find movies information\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport noPoster from \"../../assets/noPosterSmall.png\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Wonflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message color=\"#e74c3c\" text={error} />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Wonflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : noPoster\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            <Divider>•</Divider>\n            <Item>{`⭐️${result.vote_average}/10`}</Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n      location: { pathname },\n    } = this.props;\n    const { isMovie } = this.state;\n    this.isMovie = pathname.includes(\"/movie/\");\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <>\n    <Helmet>\n      <title>Search | Wonflix</title>\n    </Helmet>\n    {\n      <Container>\n        <Helmet>\n          <title>Search | Wonflix</title>\n        </Helmet>\n        <Form onSubmit={handleSubmit} onChange={updateTerm}>\n          <Input\n            placeholder=\"Search Movies or TV Shows\"\n            defaultValue={searchTerm ? searchTerm : \"\"}\n          ></Input>\n        </Form>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            {movieResults && movieResults.length > 0 && (\n              <Section title=\"Movie Results\">\n                {movieResults.map((movie) => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    year={\n                      movie.release_date && movie.release_date.substring(0, 4)\n                    }\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n            {tvResults && tvResults.length > 0 && (\n              <Section title=\"TV Show Results\">\n                {tvResults.map((show) => (\n                  <Poster\n                    key={show.id}\n                    id={show.id}\n                    imageUrl={show.poster_path}\n                    title={show.original_name}\n                    rating={show.vote_average}\n                    year={\n                      show.first_air_date && show.first_air_date.substring(0, 4)\n                    }\n                    isMovie={false}\n                  />\n                ))}\n              </Section>\n            )}\n          </>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {movieResults &&\n          tvResults &&\n          movieResults.length === 0 &&\n          tvResults.length === 0 && (\n            <Message color=\"#95a5a6\" text=\"Nothing Found\" />\n          )}\n      </Container>\n    }{\" \"}\n  </>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\", //searchTerm을 input받아서 update하는 함수는 만들 예정임\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n    console.log(value);\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: \"Can't find results\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Wonflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>TV Shows | Wonflix</title>\n        </Helmet>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today Shows\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;"," import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try{\n            const {data: {results: topRated}} = await tvApi.topRated();\n            const {data: {results: popular}} = await tvApi.popular();\n            const {data: {results: airingToday}} = await tvApi.airingToday();\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            })\n        }catch{\n            this.setState({\n                error: \"can't find movies information\"\n            })\n        }finally{\n            this.setState({\n                loading:false\n            });\n        }\n    }\n\n    render() {\n        const {topRated, popular, airingToday, error, loading} = this.state;\n        return <TVPresenter topRated={topRated} popular={popular} airingToday={airingToday} error={error} loading={loading}/>\n    };\n}","import React from \"react\";\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport Detail from \"Routes/Detail\";\nimport Search from \"Routes/Search\";\nimport TV from \"Routes/TV\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => (\n    <Router>\n        <>\n            <Header/>\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/search\" component={Search} />\n                <Route path=\"/tv\" component={TV} />\n                <Route path=\"/movie/:id\"  component={Detail} />\n                <Route path=\"/show/:id\"  component={Detail} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </>\n    </Router>\n);","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:14px;\n        background-color:rgba(20,20,20,1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, {Component} from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router/>\n        <GlobalStyles/>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}